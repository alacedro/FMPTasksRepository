// <auto-generated />
using AngularTest.Models.Import;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AngularTest.Migrations
{
    [DbContext(typeof(ImportContext))]
    [Migration("20180829181412_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AngularTest.Models.Import.ExteriorServicesSchedule", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Active_Status");

                    b.Property<decimal>("Apr_x_per_wk");

                    b.Property<decimal>("Aug_x_per_wk");

                    b.Property<string>("Customer");

                    b.Property<decimal>("Dec_x_per_wk");

                    b.Property<decimal>("Feb_x_per_wk");

                    b.Property<decimal>("Jul_x_per_wk");

                    b.Property<decimal>("Jun_x_per_wk");

                    b.Property<decimal>("Mar_x_per_wk");

                    b.Property<decimal>("May_x_per_wk");

                    b.Property<decimal>("Month1");

                    b.Property<decimal>("Month10");

                    b.Property<decimal>("Month11");

                    b.Property<decimal>("Month12");

                    b.Property<decimal>("Month2");

                    b.Property<decimal>("Month3");

                    b.Property<decimal>("Month4");

                    b.Property<decimal>("Month5");

                    b.Property<decimal>("Month6");

                    b.Property<decimal>("Month7");

                    b.Property<decimal>("Month8");

                    b.Property<decimal>("Month9");

                    b.Property<decimal>("Nov_x_per_wk");

                    b.Property<decimal>("Oct_x_per_wk");

                    b.Property<string>("Post_Tax_Client_Price");

                    b.Property<string>("Pre_Tax_Client_Price");

                    b.Property<string>("Provider_Cost");

                    b.Property<string>("Request_Code");

                    b.Property<string>("Request_Type");

                    b.Property<int>("Sep_x_per_wk");

                    b.Property<string>("Service_Day");

                    b.Property<string>("State");

                    b.Property<string>("Store");

                    b.Property<decimal?>("Tax_Rate");

                    b.Property<decimal>("Times_Per_Week");

                    b.Property<string>("Vendor");

                    b.Property<string>("Work_Type");

                    b.HasKey("ID");

                    b.ToTable("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
